{"version":3,"sources":["components/home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","show","setShow","data","setData","interview","setInterview","userList","setUserList","handleClose","fl","handleShow","fetchAndSetData","axios","get","then","useEffect","style","backgroundImage","className","map","dt","title","Moment","startTime","format","endTime","participants","index","EmailID","marginRight","Button","variant","onClick","openInEditMode","id","delete","reverse","Modal","onHide","Header","Title","Body","Form","onSubmit","event","put","toast","success","catch","err","error","response","post","preventDefault","Group","controlId","Label","Control","type","placeholder","value","onChange","target","options","selectedValues","onSelect","onRemove","displayValue","Footer","form","App","Navbar","collapseOnSelect","expand","bg","Container","to","Brand","Toggle","Collapse","Nav","Link","href","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f69f8abe.chunk.js","sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Multiselect from 'multiselect-react-dropdown';\nimport axios from \"axios\";\nimport Moment from 'moment';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Home() {\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState([]);\n  const [interview, setInterview] = useState({});\n  const [userList, setUserList] = useState([]);\n\n  const handleClose = () => {\n    if (interview.fl == 1) {\n      setInterview({});\n    }\n    setShow(false); \n  }\n  const handleShow = () => setShow(true);\n\n  //  https://morning-savannah-58672.herokuapp.com/\n\n  const fetchAndSetData = () => {\n    axios.get(\"https://morning-savannah-58672.herokuapp.com/interview\").then(({ data }) => {\n      setData(data);\n    });\n  }\n\n  const fetchAndSetUserList = () => {\n    axios.get(\"https://morning-savannah-58672.herokuapp.com/users\").then(({ data }) => {\n      setUserList(data);\n    })\n  }\n\n  const deleteInterview = (id) => {\n    axios.delete(\"https://morning-savannah-58672.herokuapp.com/interview\", {\n      data: {\n        id\n      }\n    }).then(() => {\n      fetchAndSetData();\n    });\n  }\n\n  const openInEditMode = (dt) => {\n    dt.fl = 1;\n    setInterview(dt);\n    handleShow();\n  }\n\n  useEffect(() => {\n    fetchAndSetData();\n    fetchAndSetUserList();\n  }, []);\n\n  const submitInterview = (event) => {\n    // check if interview is being updated\n    if (interview.fl) {\n      axios.put(\"https://morning-savannah-58672.herokuapp.com/interview\", {...interview}).then(() => {\n        fetchAndSetData();\n        toast.success(\"Edited Succesfully\");\n      }).catch(err => {\n        toast.error(err.response.data);\n      })\n    } else {\n      // Create new interview\n      axios.post(\"https://morning-savannah-58672.herokuapp.com/interview\", {...interview}).then(() => {\n        fetchAndSetData();\n        toast.success(\"Email Sent\");\n      }).catch((err) => {\n        toast.error(err.response.data);\n      });\n    }\n    event.preventDefault();\n    handleClose();\n    setInterview({});\n  }\n\n  return (\n    <>\n      <ToastContainer />\n      <div\n        style={{\n          backgroundImage:\n            \"linear-gradient(rgba(255,255,255,.75), rgba(255,255,255,.75)), url(/hero-bg.jpg)\",\n        }}\n        className=\"container-fluid main\"\n      >\n        <div className=\"row rw\">\n          <div className=\"offset-md-2 col-md-8 offset-1 col-10\">\n            <h1 className=\"urlName\">Welcome to Scaler Interview Scheduler!!</h1>\n          </div>\n        </div>\n        {data.map((dt) => {\n          return (\n            <div key={dt.id} className=\"row mt-5\">\n              <div className=\"link\">  \n                <div className=\"offset-1 col-10 urlBox\">\n                  <div className=\"row mb-3\">\n                    <h4>{dt.title}</h4>\n                    <h6>Start Time - {Moment(dt.startTime).format(\"MMMM Do YYYY, h:mm a\")} </h6>\n                    <h6>End Time - {Moment(dt.endTime).format(\"MMMM Do YYYY, h:mm a\")} </h6>\n                    <h6>Participants - {dt.participants.map(({EmailID}, index) => <span className=\"badge bg-secondary\" key={index} style={{marginRight: \"5px\"}}>{EmailID}</span>)}</h6>\n                    </ div>\n                    <div className=\"row\">\n                      <Button className=\"button offset-1 col-4\" variant=\"info\" onClick={() => {openInEditMode(dt)}}>Edit</Button>\n                      <Button className=\"button offset-2 col-4\" variant=\"danger\" onClick={() => deleteInterview(dt.id)}>Delete</Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }).reverse()}\n      </div>\n      <Button className=\"button plus-button\" variant=\"primary\" onClick={handleShow}>\n        +\n      </Button>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>Add/Update interview details</Modal.Title>\n          <button className=\"btn-close\" onClick={handleClose}></button>\n        </Modal.Header>\n        <Modal.Body>\n          <Form id=\"interview\" onSubmit={submitInterview}>\n            <Form.Group className=\"mb-3\" controlId=\"formTitle\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter title\" value={interview.title || \"\"} onChange = {(event) => {setInterview({...interview, title: event.target.value})}}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formStartDate\">\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control type=\"datetime-local\" placeholder=\"Enter interview start time\" value={interview.startTime || \"\"} onChange = {(event) => {setInterview({...interview, startTime: event.target.value})}}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formEndDate\">\n              <Form.Label>End Date</Form.Label>\n              <Form.Control type=\"datetime-local\" placeholder=\"Enter interview end time\" value={interview.endTime || \"\"} onChange = {(event) => {setInterview({...interview, endTime: event.target.value})}}/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formEndDate\">\n              <Form.Label>Participants</Form.Label>\n              <Multiselect\n                options={userList} // Options to display in the dropdown\n                selectedValues={interview.participants || []} // Preselected value to persist in dropdown\n                onSelect={(value) => {setInterview({...interview, participants: value})}} // Function will trigger on select event\n                onRemove={(value) => {setInterview({...interview, participants: value})}} // Function will trigger on remove event\n                displayValue=\"EmailID\"\n                />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" form=\"interview\" type=\"submit\">\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Home;\n","import \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/home\";\n\nfunction App() {\n\n  return (\n    <>\n    <Router>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>SI Scheduler</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <LinkContainer to=\"/\">\n                <Nav.Link>Home</Nav.Link>\n              </LinkContainer>\n            </Nav>\n            <Nav>\n              <Nav.Link href=\"https://github.com/ashwinkumar9931\">\n                Github\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}